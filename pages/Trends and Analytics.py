
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import pydeck as pdk

st.title(":chart_with_upwards_trend: Trends and Analytics")

dfhq = pd.read_csv('fortune_500_hq.csv',index_col="NAME")
columns_to_drop = ["ADDRESS2","SOURCE","COUNTYFIPS","COMMENTS","PRC"]
dfhq.drop(columns=columns_to_drop, axis='columns',inplace=True)


st.subheader(":dollar: Revenues vs. Profits vs. Employees of Top 50 Corporations")
st.write("The top 50 corporations of the Fortune 500 list show that there is a low or weak correlation "
         "between the number of employees a corporation has and the amount of revenue and profits "
         "the corporation generates. This indicates that having a larger number of "
         "employees does not necessarily translate to significantly higher revenue or profits. The size of "
         "the workforce alone is not a strong predictor for financial success. ")

#d_top_sorted = dfhq.sort_values("RANK").head(50)
d_top_sorted = dfhq.sort_values("RANK").iloc[1:50]

chart_data = pd.DataFrame(d_top_sorted, columns=["REVENUES", "PROFIT", "EMPLOYEES"])
chart_data["REVENUES"] = pd.to_numeric(chart_data["REVENUES"])
chart_data["PROFIT"] = pd.to_numeric(chart_data["PROFIT"])
chart_data["EMPLOYEES"] = pd.to_numeric(chart_data["EMPLOYEES"])

#[VIZ2] - Line chart
#Displays the line chart
st.line_chart(chart_data, x="EMPLOYEES", y=["REVENUES","PROFIT"])



st.subheader(":signal_strength: Overall correlation between corporation revenues and employees ")
st.write("Many of the Fortune 500 corporations have less than 100,000 employees and "
         "generate around $75,000 or less in revenues. The scatterplot shows a low correlation "
         "between the number of employees and revenues generated by corporations as the "
         "relation between employees and revenues varies between different corporations. "
         "Some corporations have a large number of employees and have higher revenues, while "
         "other corporations have a smaller number of employees and are able to generate high revenues. ")
#[ST3] - Streamlit widget slider
#Creates a dataframe based on filtered revenue using slider
min_revenue = dfhq["REVENUES"].min()
max_revenue = dfhq["REVENUES"].max()

#User can use slider to filter corporations based on revenue
#[DA3] - Find the top largest and smallest values of a column
st.metric(label="Maximum revenue of a Fortune 500 Corporation (in $)", value=max_revenue)
st.metric(label="Minimum revenue of a Fortune 500 Corporation (in $)", value=min_revenue)

revenue_range = st.slider(
    "Select revenue range:",
    min_value = min_revenue,
    max_value = max_revenue,
    value=(min_revenue, max_revenue),
    step=100
)

#[DA5] - Filter data by two or more conditions
filtered_rev_df = dfhq[(dfhq["REVENUES"] >= revenue_range[0]) & (dfhq["REVENUES"] <= revenue_range[1])]
filtered_rev_df.drop("LATITUDE", axis='columns', inplace=True)
filtered_rev_df.drop("LONGITUDE", axis='columns', inplace=True)
filtered_rev_df.drop("WEBSITE", axis='columns', inplace=True)
filtered_rev_df = filtered_rev_df.iloc[:,4:]

#[VIZ3] - Scatter plot
plt.figure(figsize=(10, 4))
plt.scatter(filtered_rev_df['REVENUES'], filtered_rev_df['EMPLOYEES'])
plt.xlabel('Revenue (in $)')
plt.ylabel('Employees')
plt.title('Revenue vs. Employees')
plt.grid(True)
plt.show()
st.pyplot(plt)




st.subheader(":moneybag: By the end of the fiscal year, the 20 most profitable corporations were ")
#Reference article:  https://www.cnbc.com/2023/08/03/apple-services-are-very-profitable-and-may-be-ready-for-takeoff-again.html#:~:text=Apple's%20services%20business%20is%20critical,of%20over%202%20billion%20devices.
st.write("Apple, J.P. Morgan Chase, and Berkshire Hathaway were the most profitable "
           "corporations for the fiscal year, with Apple leading the way with profits exceeding $45,000. "
           "Among these profitable corporations, Apple is a notable outlier generating nearly twice as many profits "
           "as its closest competitors. Apple is one of the most profitable corporations in the US due to its growth in its services, "
           "specifically subscriptions, licensing fees, and Apple Pay. ")
st.write("Many of the top 20 most profitable corporations are in the technology and financial industry. "
           "The average profit generated amongst these "
           "corporations was around $16,775.")

#top revenue and profits
#[DA4] - Filter by one condition
dtop_rev_prof = dfhq[(dfhq.PROFIT > 0)].sort_values("PROFIT",ascending=False)
dtop_sliced = dtop_rev_prof.iloc[:,4:]
top_20_profitable = dtop_rev_prof.head(20)
dtop_sliced.drop("LATITUDE", axis='columns', inplace=True)
dtop_sliced.drop("LONGITUDE", axis='columns', inplace=True)
dtop_sliced.drop("WEBSITE", axis='columns', inplace=True)
#st.dataframe(dtop_sliced)
average_profit = top_20_profitable["PROFIT"].mean()
st.metric(label="Average profit of top 20 most profitable corporations (in $)", value=average_profit, delta="+$", delta_color="normal")

plt.figure(figsize=(15, 8))
bars = plt.bar(top_20_profitable.index, top_20_profitable["PROFIT"], color='skyblue')

#Labels and title of chart
#[VIZ]
plt.xlabel("Corporation Name", fontsize=12)
plt.ylabel("Profit (in millions)", fontsize=12)
plt.title("Top 20 Most Profitable Corporations", fontsize=14)
plt.xticks(rotation=45, ha='right')

for bar in bars:
    plt.text(
        bar.get_x() + bar.get_width() / 2,
        bar.get_height(),
        f"${bar.get_height():,.0f}",
        ha='center',
        va='bottom',
        fontsize=10
    )

plt.tight_layout()
st.pyplot(plt)









